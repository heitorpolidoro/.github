name: Code Quality Analyzers

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      DEEPSOURCE_DSN:
        required: true
    inputs:
      python_version:
        type: string
        description: "Python version to run the tests"
        default: "3.x"
        required: false
      skip_tests:
        type: boolean
        description: "Skip the Python tests. MUST UPLOAD THE coverage.xml artifact"
        default: false
        required: false

jobs:
  set_python_version:
    name: Configuring Python Version
    runs-on: ubuntu-latest
    outputs:
      python_version: ${{ steps.set.outputs.PYTHON_VER }}
      python_coverage_version: ${{ steps.set.outputs.PYTHON_COV_VER }}
    steps:
      - name: Set Python version
        id: set
        run: |
          python -c "print('PYTHON_VER='+str('${{ inputs.python_version }}'.split(',')))" >> $GITHUB_OUTPUT
          python -c "print('PYTHON_COV_VER='+str('${{ inputs.python_version }}'.split(',')[-1]))" >> $GITHUB_OUTPUT

  tests:
    name: Tests
    needs: set_python_version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ${{fromJson(jobs.set_python_version.outputs.python_version)}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.test.txt ]; then pip install -r requirements.test.txt; 
          elif [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: |
          pytest --cov --cov-branch --cov-report=xml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ matrix.python_version == jobs.set_python_version.outputs.python_version }}
        with:
          name: coverage.xml
          path: coverage.xml

  sonarcloud:
    name: SonarCloud Coverage Submit
    needs: tests
    runs-on: ubuntu-latest
    #if: (! cancelled()) || inputs.skip_tests

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/download-artifact@v4
        with:
          name: coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deepsource:
    name: Deepsource Coverage Submit
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/download-artifact@v4
        with:
          name: coverage.xml

      - name: Report test coverage to DeepSource
        uses: deepsourcelabs/test-coverage-action@master
        with:
          key: python
          coverage-file: coverage.xml
          dsn: ${{ secrets.DEEPSOURCE_DSN }}
